openapi: 3.0.2
info:
  title: KLAYTN OPEN API
  version: 1.10.0
  contact:
    name: API support
    url: https://forum.klaytn.foundation/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: klay
  - name: account
  - name: governance
  - name: eth
x-tagGroups:
  - name: Klay
    tags:
      - klay
      - klay.account
  - name: Models
    tags:
      - RewardSpec
servers:
  - url: http://localhost:7151
  - url: https://api.baobab.klaytn.net:8651
  - url: https://public-en-cypress.klaytn.net
paths:
  /klay/getRewards:
    post:
      tags:
        - klay
      operationId: getRewards
      summary: '[getRewards] Find distributed block rewards'
      description: |
        Returns distributed block rewards information at the latest block number

        **JSONRPC:** `klay_getRewards`
      parameters:
        - name: blockNumberOrTag
          required: false
          schema:
            oneOf:
              - type: number
                format: double
                title: blockNumber
                description: BN | BigNumber
              - type: string
                title: blockTag
                example:
                  - latest
                  - pending
                  - earliest
            readOnly: true
          description: |
            blockNumber is the block number
            blockTag is the string "latest", "earliest" or "pending"
          in: query
      requestBody:
        required: true
        description: |
          blockNumber is the block number
          blockTag is the string "latest", "earliest" or "pending"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - type: object
                  properties:
                    method:
                      type: string
                      default: klay_getRewards
                    params:
                      example:
                        - latest
      responses:
        default:
          description: |
            block rewards information <br/>
            Link <br/>
            <SchemaDefinition schemaRef="#/components/schemas/RewardSpec" />
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/RewardSpecResult'
      x-codeSamples:
        - lang: typescript
          label: Typescript
          source: |
            import {Configuration, KlayApi} from "../../openapi";

            const configuration = new Configuration({
                basePath: 'http://localhost:7151',
            });

            const api = new KlayApi(configuration);

            describe('Klay getRewards API', () => {
                test('should return info of a block number', async () => {
                    const response = await api.getRewards(1);
                    expect(response.data.jsonrpc).toBe("2.0")
                });
            });
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/klay/getRewards' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "klay_getRewards",
              "id": 1,
              "jsonrpc": "2.0",
              "params": [
                "latest"
              ]
            }'
  /klay/account/accountCreated:
    post:
      operationId: accountCreated
      summary: '[accountCreated] Find if input address was created'
      description: |
        Returns `true` if the account associated with the address is created. It returns `false` otherwise.

        **JSONRPC:** `klay_accountCreated`

        **NOTE:** *In versions earlier than Klaytn v1.7.0, only integer block number, the string "earliest" and "latest" are available.*
      tags:
        - klay.account
      parameters:
        - name: address
          required: true
          schema:
            type: string
            format: 20-byte DATA
            readOnly: true
          description: Address
          in: query
        - name: blockNumber
          required: true
          schema:
            oneOf:
              - type: number
                format: double
                title: blockNumber
                description: BN | BigNumber
              - type: string
                title: blockTag
                example:
                  - latest
                  - pending
                  - earliest
            readOnly: true
          description: |
            Integer or hexadecimal block number, or the string `earliest`, `latest` or `pending` as in the [default block parameter](https://docs.klaytn.foundation/dapp/json-rpc/api-references/klay/block#the-default-block-parameter), or block hash.
          in: query
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - type: object
                  properties:
                    method:
                      type: string
                      default: klay_accountCreated
                    params:
                      example:
                        - '0xa4f42d4d2a3a13874406435500950c9bf2d783db'
                        - latest
      responses:
        default:
          description: The existence of an input address
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - type: object
                    properties:
                      result:
                        type: boolean
      externalDocs:
        url: https://docs.klaytn.foundation/dapp/json-rpc/api-references/klay/account#klay_accountcreated
        description: Klaytn Docs
      x-codeSamples:
        - lang: typescript
          label: Typescript
          source: |
            import {
                Configuration, GetRewardsBlockNumberOrTagParameter,
                KlayAccountApi,
            } from "../../../openapi";

            const configuration = new Configuration({
                basePath: 'http://localhost:7151',
            });

            const api = new KlayAccountApi(configuration);

            describe('accountCreated', () => {
                test('should return false', async () => {
                    const response = await api.accountCreated(
                        "0xa4f42d4d2a3a13874406435500950c9bf2d783db",
                        "latest"
                    );
                    expect(response.data.result).toBe(false);
                })
            });
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'http://localhost:7151/klay/accountCreated' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "klay_accountCreated",
              "params": [
                "0xa4f42d4d2a3a13874406435500950c9bf2d783db",
                "latest"
              ]
            }'
  /klay/account/accountCreated2:
    post:
      operationId: accountCreated2
      summary: '[accountCreated] Find if input address was created'
      description: |
        Returns `true` if the account associated with the address is created. It returns `false` otherwise.

        **JSONRPC:** `klay_accountCreated`

        **NOTE:** *In versions earlier than Klaytn v1.7.0, only integer block number, the string "earliest" and "latest" are available.*
      tags:
        - klay.account
      parameters:
        - name: address
          schema:
            type: string
            format: 20-byte DATA
            readOnly: true
          description: Address
          in: query
        - name: blockNumber
          required: true
          schema:
            type: number
            readOnly: true
          description: Address
          in: query
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - type: object
                  properties:
                    method:
                      type: string
                      default: klay_accountCreated
                    params:
                      example:
                        - '0xa4f42d4d2a3a13874406435500950c9bf2d783db'
                        - latest
      responses:
        default:
          description: The existence of an input address
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - type: object
                    properties:
                      result:
                        type: boolean
      externalDocs:
        url: https://docs.klaytn.foundation/dapp/json-rpc/api-references/klay/account#klay_accountcreated
        description: Klaytn Docs
      x-codeSamples:
        - lang: typescript
          label: Typescript
          source: |
            import {
                Configuration, GetRewardsBlockNumberOrTagParameter,
                KlayAccountApi,
            } from "../../../openapi";

            const configuration = new Configuration({
                basePath: 'http://localhost:7151',
            });

            const api = new KlayAccountApi(configuration);

            describe('accountCreated', () => {
                test('should return false', async () => {
                    const response = await api.accountCreated(
                        "0xa4f42d4d2a3a13874406435500950c9bf2d783db",
                        "latest"
                    );
                    expect(response.data.result).toBe(false);
                })
            });
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'http://localhost:7151/klay/accountCreated' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "klay_accountCreated",
              "params": [
                "0xa4f42d4d2a3a13874406435500950c9bf2d783db",
                "latest"
              ]
            }'
components:
  schemas:
    JsonRpcRequest:
      type: object
      required:
        - method
        - id
        - jsonrpc
      properties:
        method:
          type: string
          description: Method name
        id:
          type: integer
          default: 1
          format: int64
          description: Request ID, Random or Auto incrementation
        jsonrpc:
          type: string
          default: '2.0'
          description: JSON-RPC Version (2.0)
        params:
          type: array
          items: {}
    ErrorMember:
      type: object
      title: ErrorMember
      required:
        - code
      properties:
        code:
          type: integer
          format: int64
          example: -32700
          description: |
            A Number that indicates the error type that occurred.
            This MUST be an integer.

            | code | message | description |
            |-----|-----|-------|
            | -32700   | Parse error   | invalid JSON was received by the server. \nAn error occurred on the server while parsing the JSON text. |
            |-32602 | Invalid params | Invalid method parameter(s). |
        message:
          type: string
          example: Parse error
          description: |
            A String providing a short description of the error.
            The message SHOULD be limited to a concise single sentence.
        data:
          type: string
          description: |
            A Primitive or Structured value that contains additional information about the error.
            This may be omitted.
            The value of this member is defined by the Server (e.g. detailed error information, nested errors etc.).
    JsonRpcResponse:
      type: object
      required:
        - jsonrpc
        - id
      properties:
        jsonrpc:
          type: string
          default: '2.0'
        id:
          type: integer
          format: int64
        error:
          $ref: '#/components/schemas/ErrorMember'
        result: {}
    RewardSpec:
      title: RewardSpec
      description: |
        <SchemaDefinition schemaRef="#/components/schemas/RewardSpec" />
      type: object
      required:
        - burnFee
        - kfg
        - kir
        - minted
        - proposer
        - rewards
        - stakers
        - totalFee
      properties:
        burnFee:
          type: integer
          format: int64
          description: the amount burnt
        kgf:
          type: integer
          format: int64
          description: the amount allocated to KGF
        kir:
          type: integer
          format: int64
          description: the amount allocated to KIR
        minted:
          type: number
          format: double
          description: the amount newly minted
          example: 9600000000000000000
        proposer:
          type: number
          format: double
          description: the amount allocated to the block proposer
          example: 9600000000000000000
        rewards:
          type: object
          description: mapping from reward recipient to amounts
          additionalProperties:
            type: number
            format: double
          example:
            '1.0278187497989767e+48': 9600000000000000000
        stakers:
          type: integer
          format: int64
          description: total amount allocated to stakers
        totalFee:
          type: integer
          format: int64
          description: total tx fee spent
    RewardSpecResult:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/RewardSpec'
